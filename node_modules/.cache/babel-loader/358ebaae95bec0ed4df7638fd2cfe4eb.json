{"remainingRequest":"/Users/wilson/Desktop/my-app/vue-app/node_modules/babel-loader/lib/index.js!/Users/wilson/Desktop/my-app/vue-app/src/vue-apollo.js","dependencies":[{"path":"/Users/wilson/Desktop/my-app/vue-app/src/vue-apollo.js","mtime":1610887193962},{"path":"/Users/wilson/Desktop/my-app/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wilson/Desktop/my-app/vue-app/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvd2lsc29uL0Rlc2t0b3AvbXktYXBwL3Z1ZS1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvd2lsc29uL0Rlc2t0b3AvbXktYXBwL3Z1ZS1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBWdWVBcG9sbG8gZnJvbSAndnVlLWFwb2xsbyc7CmltcG9ydCB7IGNyZWF0ZUFwb2xsb0NsaWVudCwgcmVzdGFydFdlYnNvY2tldHMgfSBmcm9tICd2dWUtY2xpLXBsdWdpbi1hcG9sbG8vZ3JhcGhxbC1jbGllbnQnOyAvLyBJbnN0YWxsIHRoZSB2dWUgcGx1Z2luCgpWdWUudXNlKFZ1ZUFwb2xsbyk7IC8vIE5hbWUgb2YgdGhlIGxvY2FsU3RvcmFnZSBpdGVtCgp2YXIgQVVUSF9UT0tFTiA9ICdhcG9sbG8tdG9rZW4nOyAvLyBIdHRwIGVuZHBvaW50Cgp2YXIgaHR0cEVuZHBvaW50ID0gcHJvY2Vzcy5lbnYuVlVFX0FQUF9HUkFQSFFMX0hUVFAgfHwgJ2h0dHA6Ly8xMjcuMC4wLjE6OTA5MC9ncmFwaHFsLyc7IC8vIEZpbGVzIFVSTCByb290CgpleHBvcnQgdmFyIGZpbGVzUm9vdCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfRklMRVNfUk9PVCB8fCBodHRwRW5kcG9pbnQuc3Vic3RyKDAsIGh0dHBFbmRwb2ludC5pbmRleE9mKCcvZ3JhcGhxbCcpKTsKVnVlLnByb3RvdHlwZS4kZmlsZXNSb290ID0gZmlsZXNSb290OyAvLyBDb25maWcKCnZhciBkZWZhdWx0T3B0aW9ucyA9IHsKICAvLyBZb3UgY2FuIHVzZSBgaHR0cHNgIGZvciBzZWN1cmUgY29ubmVjdGlvbiAocmVjb21tZW5kZWQgaW4gcHJvZHVjdGlvbikKICBodHRwRW5kcG9pbnQ6IGh0dHBFbmRwb2ludCwKICAvLyBZb3UgY2FuIHVzZSBgd3NzYCBmb3Igc2VjdXJlIGNvbm5lY3Rpb24gKHJlY29tbWVuZGVkIGluIHByb2R1Y3Rpb24pCiAgLy8gVXNlIGBudWxsYCB0byBkaXNhYmxlIHN1YnNjcmlwdGlvbnMKICAvLyB3c0VuZHBvaW50OiBwcm9jZXNzLmVudi5WVUVfQVBQX0dSQVBIUUxfV1MgfHwgJ3dzOi8vbG9jYWxob3N0OjQwMDAvZ3JhcGhxbC8nLAogIC8vIExvY2FsU3RvcmFnZSB0b2tlbgogIHRva2VuTmFtZTogQVVUSF9UT0tFTiwKICAvLyBFbmFibGUgQXV0b21hdGljIFF1ZXJ5IHBlcnNpc3Rpbmcgd2l0aCBBcG9sbG8gRW5naW5lCiAgcGVyc2lzdGluZzogZmFsc2UsCiAgLy8gVXNlIHdlYnNvY2tldHMgZm9yIGV2ZXJ5dGhpbmcgKG5vIEhUVFApCiAgLy8gWW91IG5lZWQgdG8gcGFzcyBhIGB3c0VuZHBvaW50YCBmb3IgdGhpcyB0byB3b3JrCiAgLy8gd2Vic29ja2V0c09ubHk6IGZhbHNlLAogIC8vIElzIGJlaW5nIHJlbmRlcmVkIG9uIHRoZSBzZXJ2ZXI/CiAgc3NyOiBmYWxzZSAvLyBPdmVycmlkZSBkZWZhdWx0IGFwb2xsbyBsaW5rCiAgLy8gbm90ZTogZG9uJ3Qgb3ZlcnJpZGUgaHR0cExpbmsgaGVyZSwgc3BlY2lmeSBodHRwTGluayBvcHRpb25zIGluIHRoZQogIC8vIGh0dHBMaW5rT3B0aW9ucyBwcm9wZXJ0eSBvZiBkZWZhdWx0T3B0aW9ucy4KICAvLyBsaW5rOiBteUxpbmsKICAvLyBPdmVycmlkZSBkZWZhdWx0IGNhY2hlCiAgLy8gY2FjaGU6IG15Q2FjaGUKICAvLyBPdmVycmlkZSB0aGUgd2F5IHRoZSBBdXRob3JpemF0aW9uIGhlYWRlciBpcyBzZXQKICAvLyBnZXRBdXRoOiAodG9rZW5OYW1lKSA9PiAuLi4KICAvLyBBZGRpdGlvbmFsIEFwb2xsb0NsaWVudCBvcHRpb25zCiAgLy8gYXBvbGxvOiB7IC4uLiB9CiAgLy8gQ2xpZW50IGxvY2FsIGRhdGEgKHNlZSBhcG9sbG8tbGluay1zdGF0ZSkKICAvLyBjbGllbnRTdGF0ZTogeyByZXNvbHZlcnM6IHsgLi4uIH0sIGRlZmF1bHRzOiB7IC4uLiB9IH0KCn07IC8vIENhbGwgdGhpcyBpbiB0aGUgVnVlIGFwcCBmaWxlCgpleHBvcnQgZnVuY3Rpb24gY3JlYXRlUHJvdmlkZXIoKSB7CiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9OwoKICAvLyBDcmVhdGUgYXBvbGxvIGNsaWVudAogIHZhciBfY3JlYXRlQXBvbGxvQ2xpZW50ID0gY3JlYXRlQXBvbGxvQ2xpZW50KF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZGVmYXVsdE9wdGlvbnMpLCBvcHRpb25zKSksCiAgICAgIGFwb2xsb0NsaWVudCA9IF9jcmVhdGVBcG9sbG9DbGllbnQuYXBvbGxvQ2xpZW50LAogICAgICB3c0NsaWVudCA9IF9jcmVhdGVBcG9sbG9DbGllbnQud3NDbGllbnQ7IC8vIGFwb2xsb0NsaWVudC53c0NsaWVudCA9IHdzQ2xpZW50CiAgLy8gQ3JlYXRlIHZ1ZSBhcG9sbG8gcHJvdmlkZXIKCgogIHZhciBhcG9sbG9Qcm92aWRlciA9IG5ldyBWdWVBcG9sbG8oewogICAgZGVmYXVsdENsaWVudDogYXBvbGxvQ2xpZW50LAogICAgZGVmYXVsdE9wdGlvbnM6IHsKICAgICAgJHF1ZXJ5OiB7Ly8gZmV0Y2hQb2xpY3k6ICdjYWNoZS1hbmQtbmV0d29yaycsCiAgICAgIH0KICAgIH0sCiAgICBlcnJvckhhbmRsZXI6IGZ1bmN0aW9uIGVycm9ySGFuZGxlcihlcnJvcikgewogICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICBjb25zb2xlLmxvZygnJWNFcnJvcicsICdiYWNrZ3JvdW5kOiByZWQ7IGNvbG9yOiB3aGl0ZTsgcGFkZGluZzogMnB4IDRweDsgYm9yZGVyLXJhZGl1czogM3B4OyBmb250LXdlaWdodDogYm9sZDsnLCBlcnJvci5tZXNzYWdlKTsKICAgIH0KICB9KTsKICByZXR1cm4gYXBvbGxvUHJvdmlkZXI7Cn0gLy8gTWFudWFsbHkgY2FsbCB0aGlzIHdoZW4gdXNlciBsb2cgaW4KCmV4cG9ydCBmdW5jdGlvbiBvbkxvZ2luKF94LCBfeDIpIHsKICByZXR1cm4gX29uTG9naW4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfSAvLyBNYW51YWxseSBjYWxsIHRoaXMgd2hlbiB1c2VyIGxvZyBvdXQKCmZ1bmN0aW9uIF9vbkxvZ2luKCkgewogIF9vbkxvZ2luID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGFwb2xsb0NsaWVudCwgdG9rZW4pIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgaWYgKHR5cGVvZiBsb2NhbFN0b3JhZ2UgIT09ICd1bmRlZmluZWQnICYmIHRva2VuKSB7CiAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oQVVUSF9UT0tFTiwgdG9rZW4pOwogICAgICAgICAgICB9IC8vIGlmIChhcG9sbG9DbGllbnQud3NDbGllbnQpIHJlc3RhcnRXZWJzb2NrZXRzKGFwb2xsb0NsaWVudC53c0NsaWVudCkKCgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgIHJldHVybiBhcG9sbG9DbGllbnQucmVzZXRTdG9yZSgpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDY7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCclY0Vycm9yIG9uIGNhY2hlIHJlc2V0IChsb2dpbiknLCAnY29sb3I6IG9yYW5nZTsnLCBfY29udGV4dC50MC5tZXNzYWdlKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxLCA2XV0pOwogIH0pKTsKICByZXR1cm4gX29uTG9naW4uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIG9uTG9nb3V0KF94MykgewogIHJldHVybiBfb25Mb2dvdXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX29uTG9nb3V0KCkgewogIF9vbkxvZ291dCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoYXBvbGxvQ2xpZW50KSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBpZiAodHlwZW9mIGxvY2FsU3RvcmFnZSAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShBVVRIX1RPS0VOKTsKICAgICAgICAgICAgfSAvLyBpZiAoYXBvbGxvQ2xpZW50LndzQ2xpZW50KSByZXN0YXJ0V2Vic29ja2V0cyhhcG9sbG9DbGllbnQud3NDbGllbnQpCgoKICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOwogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgIHJldHVybiBhcG9sbG9DbGllbnQucmVzZXRTdG9yZSgpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA5OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gNjsKICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDEpOwogICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZQogICAgICAgICAgICBjb25zb2xlLmxvZygnJWNFcnJvciBvbiBjYWNoZSByZXNldCAobG9nb3V0KScsICdjb2xvcjogb3JhbmdlOycsIF9jb250ZXh0Mi50MC5tZXNzYWdlKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzEsIDZdXSk7CiAgfSkpOwogIHJldHVybiBfb25Mb2dvdXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQ=="},{"version":3,"sources":["/Users/wilson/Desktop/my-app/vue-app/src/vue-apollo.js"],"names":["Vue","VueApollo","createApolloClient","restartWebsockets","use","AUTH_TOKEN","httpEndpoint","process","env","VUE_APP_GRAPHQL_HTTP","filesRoot","VUE_APP_FILES_ROOT","substr","indexOf","prototype","$filesRoot","defaultOptions","tokenName","persisting","ssr","createProvider","options","apolloClient","wsClient","apolloProvider","defaultClient","$query","errorHandler","error","console","log","message","onLogin","token","localStorage","setItem","resetStore","onLogout","removeItem"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,sCAAtD,C,CAEA;;AACAH,GAAG,CAACI,GAAJ,CAAQH,SAAR,E,CAEA;;AACA,IAAMI,UAAU,GAAG,cAAnB,C,CAEA;;AACA,IAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAAZ,IAAoC,gCAAzD,C,CACA;;AACA,OAAO,IAAMC,SAAS,GAAGH,OAAO,CAACC,GAAR,CAAYG,kBAAZ,IAAkCL,YAAY,CAACM,MAAb,CAAoB,CAApB,EAAuBN,YAAY,CAACO,OAAb,CAAqB,UAArB,CAAvB,CAApD;AAEPb,GAAG,CAACc,SAAJ,CAAcC,UAAd,GAA2BL,SAA3B,C,CAEA;;AACA,IAAMM,cAAc,GAAG;AACrB;AACAV,EAAAA,YAAY,EAAZA,YAFqB;AAGrB;AACA;AACA;AACA;AACAW,EAAAA,SAAS,EAAEZ,UAPU;AAQrB;AACAa,EAAAA,UAAU,EAAE,KATS;AAUrB;AACA;AACA;AACA;AACAC,EAAAA,GAAG,EAAE,KAdgB,CAgBrB;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AA/BqB,CAAvB,C,CAkCA;;AACA,OAAO,SAASC,cAAT,GAAuC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC5C;AAD4C,4BAETnB,kBAAkB,iCAChDc,cADgD,GAEhDK,OAFgD,EAFT;AAAA,MAEpCC,YAFoC,uBAEpCA,YAFoC;AAAA,MAEtBC,QAFsB,uBAEtBA,QAFsB,EAM5C;AAEA;;;AACA,MAAMC,cAAc,GAAG,IAAIvB,SAAJ,CAAc;AACnCwB,IAAAA,aAAa,EAAEH,YADoB;AAEnCN,IAAAA,cAAc,EAAE;AACdU,MAAAA,MAAM,EAAE,CACN;AADM;AADM,KAFmB;AAOnCC,IAAAA,YAPmC,wBAOrBC,KAPqB,EAOd;AACnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,yFAAvB,EAAkHF,KAAK,CAACG,OAAxH;AACD;AAVkC,GAAd,CAAvB;AAaA,SAAOP,cAAP;AACD,C,CAED;;AACA,gBAAsBQ,OAAtB;AAAA;AAAA,C,CAaA;;;qEAbO,iBAAwBV,YAAxB,EAAsCW,KAAtC;AAAA;AAAA;AAAA;AAAA;AACL,gBAAI,OAAOC,YAAP,KAAwB,WAAxB,IAAuCD,KAA3C,EAAkD;AAChDC,cAAAA,YAAY,CAACC,OAAb,CAAqB9B,UAArB,EAAiC4B,KAAjC;AACD,aAHI,CAIL;;;AAJK;AAAA;AAAA,mBAMGX,YAAY,CAACc,UAAb,EANH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQH;AACAP,YAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8C,gBAA9C,EAAgE,YAAEC,OAAlE;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAcP,gBAAsBM,QAAtB;AAAA;AAAA;;;sEAAO,kBAAyBf,YAAzB;AAAA;AAAA;AAAA;AAAA;AACL,gBAAI,OAAOY,YAAP,KAAwB,WAA5B,EAAyC;AACvCA,cAAAA,YAAY,CAACI,UAAb,CAAwBjC,UAAxB;AACD,aAHI,CAIL;;;AAJK;AAAA;AAAA,mBAMGiB,YAAY,CAACc,UAAb,EANH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQH;AACAP,YAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+C,gBAA/C,EAAiE,aAAEC,OAAnE;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import Vue from 'vue'\nimport VueApollo from 'vue-apollo'\nimport { createApolloClient, restartWebsockets } from 'vue-cli-plugin-apollo/graphql-client'\n\n// Install the vue plugin\nVue.use(VueApollo)\n\n// Name of the localStorage item\nconst AUTH_TOKEN = 'apollo-token'\n\n// Http endpoint\nconst httpEndpoint = process.env.VUE_APP_GRAPHQL_HTTP || 'http://127.0.0.1:9090/graphql/'\n// Files URL root\nexport const filesRoot = process.env.VUE_APP_FILES_ROOT || httpEndpoint.substr(0, httpEndpoint.indexOf('/graphql'))\n\nVue.prototype.$filesRoot = filesRoot\n\n// Config\nconst defaultOptions = {\n  // You can use `https` for secure connection (recommended in production)\n  httpEndpoint,\n  // You can use `wss` for secure connection (recommended in production)\n  // Use `null` to disable subscriptions\n  // wsEndpoint: process.env.VUE_APP_GRAPHQL_WS || 'ws://localhost:4000/graphql/',\n  // LocalStorage token\n  tokenName: AUTH_TOKEN,\n  // Enable Automatic Query persisting with Apollo Engine\n  persisting: false,\n  // Use websockets for everything (no HTTP)\n  // You need to pass a `wsEndpoint` for this to work\n  // websocketsOnly: false,\n  // Is being rendered on the server?\n  ssr: false,\n\n  // Override default apollo link\n  // note: don't override httpLink here, specify httpLink options in the\n  // httpLinkOptions property of defaultOptions.\n  // link: myLink\n\n  // Override default cache\n  // cache: myCache\n\n  // Override the way the Authorization header is set\n  // getAuth: (tokenName) => ...\n\n  // Additional ApolloClient options\n  // apollo: { ... }\n\n  // Client local data (see apollo-link-state)\n  // clientState: { resolvers: { ... }, defaults: { ... } }\n}\n\n// Call this in the Vue app file\nexport function createProvider (options = {}) {\n  // Create apollo client\n  const { apolloClient, wsClient } = createApolloClient({\n    ...defaultOptions,\n    ...options,\n  })\n  // apolloClient.wsClient = wsClient\n\n  // Create vue apollo provider\n  const apolloProvider = new VueApollo({\n    defaultClient: apolloClient,\n    defaultOptions: {\n      $query: {\n        // fetchPolicy: 'cache-and-network',\n      },\n    },\n    errorHandler (error) {\n      // eslint-disable-next-line no-console\n      console.log('%cError', 'background: red; color: white; padding: 2px 4px; border-radius: 3px; font-weight: bold;', error.message)\n    },\n  })\n\n  return apolloProvider\n}\n\n// Manually call this when user log in\nexport async function onLogin (apolloClient, token) {\n  if (typeof localStorage !== 'undefined' && token) {\n    localStorage.setItem(AUTH_TOKEN, token)\n  }\n  // if (apolloClient.wsClient) restartWebsockets(apolloClient.wsClient)\n  try {\n    await apolloClient.resetStore()\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log('%cError on cache reset (login)', 'color: orange;', e.message)\n  }\n}\n\n// Manually call this when user log out\nexport async function onLogout (apolloClient) {\n  if (typeof localStorage !== 'undefined') {\n    localStorage.removeItem(AUTH_TOKEN)\n  }\n  // if (apolloClient.wsClient) restartWebsockets(apolloClient.wsClient)\n  try {\n    await apolloClient.resetStore()\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log('%cError on cache reset (logout)', 'color: orange;', e.message)\n  }\n}\n"]}]}